// Code generated by generate_static.go; DO NOT EDIT.

package static

import "time"

var ModTime = time.Unix(0, 1626391507669835000)

const IndexHtml = "<!DOCTYPE html>\n<meta name=viewport content=width=device-width>\n<style>\n\nhtml {\n  font: 48px system-ui;\n  font-variant-numeric: tabular-nums;\n  background: #222;\n  color: white;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nhtml.tick {\n  background: white;\n  color: black;\n}\n\n</style>\n<h1 id=clockTime></h1>\n<script>\n\"use strict\";\n\nlet ticking = false;\nlet clockOffset;\nlet bestRtt;\n\nconst tick = () => {\n  let now = +new Date();\n  if (clockOffset)\n    now -= clockOffset - bestRtt / 2;\n  const frame = Math.floor(now / (1000/60)) % 10000;\n  clockTime.textContent = frame;\n  document.documentElement.classList[Math.floor(frame / 100) % 2 ? 'add' : 'remove']('tick');\n  requestAnimationFrame(tick);\n};\n\nconst connectWs = reloadOnOpen => {\n  let pingInterval;\n  const ping = () => {\n    ws.send(JSON.stringify({\n      type: \"ping\",\n      startTime: +new Date(),\n    }));\n  };\n  const ws = new WebSocket(`${location.protocol == 'https:' ? 'wss' : 'ws'}://${location.host}/ws`);\n  ws.onopen = e => {\n    if (reloadOnOpen)\n      location.reload(true);\n    pingInterval = setInterval(ping, 1000 + Math.random() * 500);\n    ping();\n  };\n  ws.onclose = e => {\n    clearInterval(pingInterval);\n    setTimeout(() => {\n      connectWs(true);\n    }, 1000);\n  };\n  ws.onmessage = e => {\n    const message = JSON.parse(e.data);\n    const { type } = message;\n    if (type == 'pong') {\n      const { startTime, serverTime } = message;\n      const now = +new Date();\n      const rtt = now - startTime;\n      const proposedOffset = now - serverTime;\n      if (bestRtt == null || (rtt <= bestRtt && proposedOffset <= clockOffset)) {\n        clockOffset = proposedOffset;\n        bestRtt = rtt;\n      }\n      console.log(`rtt: ${rtt.toFixed(2)} (best: ${bestRtt.toFixed(2)})`);\n      console.log(`offset: ${(now - serverTime).toFixed(2)} (best: ${clockOffset.toFixed(2)})`);\n      if (!ticking) {\n        tick();\n        ticking = true;\n      }\n    }\n  };\n};\nconnectWs();\n\n</script>\n"
